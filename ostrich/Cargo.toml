[package]
name = "ostrich"
version = "0.1.2"
authors = ["eycorsican <eric.y.corsican@gmail.com>"]
edition = "2018"
build = "build.rs"

[lib]
name = "ostrich"
path = "src/lib.rs"

[features]
default = [
    "default-ring",
    "ctrlc"
]

default-ring = [
    "all-configs",
    "all-endpoints",
    "ring-aead",
    "rustls-tls",
    # quinn supports only rustls as tls backend for now
    #    "inbound-quic",
    #    "outbound-quic",
]

default-openssl = [
    "all-configs",
    "all-endpoints",
    "openssl-aead",
    "openssl-tls",
]

# Grouping all features
all-configs = [
    "config-conf",
    "config-json",
]
all-endpoints = [
    # inbounds
    # "inbound-quic",
    #    "inbound-tls",
    #    "inbound-trojan",
    # "inbound-http",
    "inbound-socks",
    "inbound-tun",
    # outbounds
    "outbound-direct",
    "outbound-drop",
    "outbound-redirect",
    "outbound-trojan",
    #    "outbound-tls",
    "outbound-ws",
    # "outbound-quic",
    "outbound-failover",
    "outbound-tryall",
    "outbound-retry",
    "dns-over-tls"
    # "outbound-select",
#    "auto-reload",
]

# Ring-related
ring-aead = ["ring"]
rustls-tls = ["tokio-rustls", "webpki-roots","rustls"]

# Openssl-related, for platforms not supported by ring, such as mips
openssl-aead = ["openssl"]
openssl-tls = ["openssl", "tokio-openssl", "openssl-probe"]

# Config formats
config-conf = ["regex"]
config-json = ["serde", "serde_derive", "serde_json"]

# Outbounds
outbound-direct = []
outbound-drop = []
outbound-redirect = []
outbound-trojan = ["sha2", "hex"]
outbound-ws = ["tungstenite", "tokio-tungstenite", "url", "http"]
outbound-failover = ["lru_time_cache"]
outbound-tryall = []
outbound-retry = []
dns-over-tls = []
# Inbounds
inbound-socks = []
inbound-tun = ["tun","netstack-lwip"]

ctrlc = ["tokio/signal"]

[dependencies]
# Common
tokio = { version = "1", features = ["sync", "io-util", "net", "time", "rt", "rt-multi-thread"] }
futures-util = "0.3"
#protobuf = "2"
thiserror = "1.0"
futures = "0.3"
async-trait = "0.1"
byteorder = "1"
bytes = "1"
lazy_static = "1.4.0"
anyhow = "1.0"
rand = "0.8"
socket2 = "0.4"
directories = "4.0.1"
async-ffi = "0.4.0"
libloading = "0.7"
# config-json
serde_json = { version = "1.0", features = ["raw_value"], optional = true }
serde_derive = { version = "1.0", optional = true }
serde = { version = "1.0", optional = true }

protobuf = "3.0.1"
protocol = {path = "../protocol"}
# config-conf
regex = { version = "1", default-features = false, features = ["std", "perf"], optional = true }

# Openssl
openssl = { version = "0.10", features = ["vendored"], optional = true }

# Ring
ring = { version = "0.16", optional = true }

# Router
maxminddb = { version = "0.18.0", features = ["mmap"] }
memmap = "0.7"
cidr = { version = "0.1.0", default-features = false }

# DNS
trust-dns-proto = "0.22.0"
trust-dns-resolver = { version = "0.21.0-alpha.4",features = ["dns-over-rustls"] }
trust-dns-client = {version = "0.21.0-alpha.4", features = ["dns-over-rustls"]}
lru = "0.9.0"

# Logging
log = { version = "0.4", features = ["std"] }
fern = { version = "0.6", features = ["colored"] }
chrono = "0.4"
colored = "2.0"
# log = "0.4.14"
log-panics = "2.0.0"
log4rs = "1.0.0"
env_logger = "0.9.0"

# TLS/rustls/QUIC
#tokio-rustls = { version = "0.23", default-features = false,features = ["logging","early-data"],optional = true }
tokio-rustls = { version = "0.23.3",features = ["tls12"],optional = true  }
webpki-roots = { version = "0.22.3", optional = true }

# TLS/openssl
openssl-probe = { version = "0.1", optional = true }
tokio-openssl = { version = "0.6", optional = true }

# WebSocket
tungstenite = { version = "0.17.2", default-features = false, optional = true }
tokio-tungstenite = { version = "0.17.1", optional = true }

# WebSocket
url = { version = "2.2", optional = true }
http = { version = "0.2", optional = true }

# HTTP inbound
hyper = { version = "0.14", default-features = false, features = ["server", "http1"], optional = true }

# SOCKS outbound
async-socks5 = { version = "0.5", optional = true }

# Trojan
sha2 = { version = "0.10.2", optional = true }
hex = { version = "0.4", optional = true }

# Failover
lru_time_cache = { version = "0.11", optional = true }

# amux
tokio-util = { version = "0.7.0", default-features = false, features = ["io"], optional = true }

#network interface monitor
if-watch = {git = "https://github.com/mxinden/if-watch.git",features = ["smol"]}

rustls = { version = "0.20.4",features = ["tls12"],optional = true }



#hashmap
indexmap = {git = "https://github.com/bluss/indexmap.git",features =["std"]}
#dashmap = {git = "https://github.com/xacrimon/dashmap.git"}
futures-timer = "3"
arc-swap = "1.5.0"
# TUN
[target.'cfg(any(target_os = "ios", target_os = "android", target_os = "macos", target_os = "linux"))'.dependencies]
tun = { git = "https://github.com/eycorsican/rust-tun.git", branch = "fork", features = ["async"], optional = true }
# netstack-lwip = { git = "https://github.com/eycorsican/netstack-lwip.git", optional = true }
signal-hook = "0.3.13"
signal-hook-tokio = {version = "0.3.1", features = ["futures-v0_3"]}
# TUN
[target.'cfg(any(target_os = "ios", target_os = "android", target_os = "macos", target_os = "linux", target_os = "windows"))'.dependencies]
netstack-lwip = { path = "../netstack-lwip", optional = true }
[target.'cfg(target_os = "windows")'.dependencies]
local-ip-address = {git = "https://github.com/EstebanBorai/local-ip-address.git"}
win_tun = { path = "../win_tun", features = ["async"], optional = true }
wintun = "0.2"
smoltcp = "0.8.0"

#[target.'cfg(any(target_os = "macos", target_os = "linux"))'.dependencies]
#udp-stream = {git = "https://github.com/SajjadPourali/udp-stream.git"}

[target.'cfg(any(target_os = "macos", target_os = "linux",target_os = "windows"))'.dependencies]
pnet_datalink = { version = "0.29.0", package = "pnet_datalink" }
libc = "0.2"

# Used in mobile logger
[target.'cfg(any(target_os = "ios", target_os = "macos", target_os = "android"))'.dependencies]
memchr = { version = "2" }

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3", features = ["mswsock", "winsock2", "netioapi"] }
ipconfig = {git = "https://github.com/liranringel/ipconfig.git"}

##allocator
#[target.'cfg(any(target_os = "macos", target_os = "linux",target_os = "windows"))'.dependencies]
#rpmalloc = { version = "0.2.0", features = ["guards", "statistics","unlimited_cache", "unlimited_global_cache", "unlimited_thread_cache"] }
[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator = "0.5"
#allocator
[target.'cfg(target_env = "msvc")'.dependencies]
rpmalloc = { version = "0.2.0", features = ["guards", "statistics","unlimited_cache", "unlimited_global_cache", "unlimited_thread_cache"] }


[dev-dependencies]
rcgen = "0.9.2"

[build-dependencies]
cc = "1.0"
bindgen = "0.59.2"
protobuf-codegen = "3.0.1"
protoc-bin-vendored = "3.0.0"
# prost-build = "0.10.1"